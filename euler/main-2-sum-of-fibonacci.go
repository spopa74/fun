// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

package euler

import "fmt"

// WARMUP
func main_2() {

	var sum int32 = 2
	var numeroUno int32 = 1
	var numeroDuo int32 = 2

	for {
		// break if cross the boundary
		// if numeroDuo > 100 {
		if numeroDuo > 4000000 {
			break
		}

		// calculate next one
		next := numeroUno + numeroDuo

		// if even, add to sum
		if next%2 == 0 {
			fmt.Println("even #: ", next)
			sum += (next)
		}

		// flip
		numeroUno = numeroDuo
		numeroDuo = next
	}

	fmt.Println("sum: ", sum)
}
